const express = require('express');
const admin = require('firebase-admin');
const cron = require('node-cron');
const app = express();

app.use(express.json());

const serviceAccount = require('./serviceAccountKey.json');

admin.initializeApp({
  credential: admin.credential.cert(serviceAccount),
  databaseURL: 'https://SEU_PROJETO.firebaseio.com'
});

// Endpoint manual para disparar notificaÃ§Ãµes:
app.post('/send', async (req, res) => {
  const message = {
    notification: {
      title: 'Quartou!',
      body: 'Hoje Ã© quarta-feira! ðŸš€',
    },
    topic: 'all',
  };

  try {
    await admin.messaging().send(message);
    res.send('NotificaÃ§Ã£o enviada com sucesso!');
  } catch (error) {
    console.error(error);
    res.status(500).send('Erro ao enviar notificaÃ§Ã£o.');
  }
});

// Agendador de quarta-feira (para disparar automÃ¡tico toda quarta Ã s 10h)
cron.schedule('0 10 * * 3', async () => {
  console.log('Enviando notificaÃ§Ã£o automÃ¡tica de quarta-feira...');
  const message = {
    notification: {
      title: 'Quartou AutomÃ¡tico!',
      body: 'JÃ¡ Ã© quarta, bora acordar ðŸš€!',
    },
    topic: 'all',
  };
  try {
    await admin.messaging().send(message);
    console.log('NotificaÃ§Ã£o enviada!');
  } catch (error) {
    console.error('Erro ao enviar automÃ¡tica:', error);
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`API rodando na porta ${PORT}`));
